// <auto-generated />
using System;
using FreshLifie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreshLifie.Migrations
{
    [DbContext(typeof(FreshLifieContext))]
    [Migration("20181213211053_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FreshLifie.Models.item", b =>
                {
                    b.Property<int>("itemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genre");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("itemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("FreshLifie.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Order_price")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("UserId");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FreshLifie.Models.Order_Item", b =>
                {
                    b.Property<int>("ItemId");

                    b.Property<int>("OrderId");

                    b.HasKey("ItemId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("Order_Item");
                });

            modelBuilder.Entity("FreshLifie.Models.Product_Type", b =>
                {
                    b.Property<int>("Product_TypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("type");

                    b.HasKey("Product_TypeId");

                    b.ToTable("Product_Type");
                });

            modelBuilder.Entity("FreshLifie.Models.Provider", b =>
                {
                    b.Property<int>("ProviderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductTypeID");

                    b.Property<string>("ProviderName")
                        .IsRequired();

                    b.Property<string>("ProviderURL")
                        .IsRequired();

                    b.Property<int?>("_Product_TypeProduct_TypeId");

                    b.HasKey("ProviderID");

                    b.HasIndex("_Product_TypeProduct_TypeId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("FreshLifie.Models.Provider_Order", b =>
                {
                    b.Property<int>("ProviderID");

                    b.Property<int>("OrderId");

                    b.HasKey("ProviderID", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("Provider_Order");
                });

            modelBuilder.Entity("FreshLifie.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserAddress")
                        .IsRequired();

                    b.Property<string>("UserEmail")
                        .IsRequired();

                    b.Property<decimal>("UserLength")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UserPassword")
                        .IsRequired();

                    b.Property<string>("UserPhone")
                        .IsRequired();

                    b.Property<decimal>("UserWeight")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FreshLifie.Models.User_Provider", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("ProviderID");

                    b.HasKey("UserId", "ProviderID");

                    b.HasIndex("ProviderID");

                    b.ToTable("User_Provider");
                });

            modelBuilder.Entity("FreshLifie.Models.Order", b =>
                {
                    b.HasOne("FreshLifie.Models.User", "_User")
                        .WithMany("OrdersList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FreshLifie.Models.Order_Item", b =>
                {
                    b.HasOne("FreshLifie.Models.item", "_Item")
                        .WithMany("OrderList")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FreshLifie.Models.Order", "_Order")
                        .WithMany("ItemList")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FreshLifie.Models.Provider", b =>
                {
                    b.HasOne("FreshLifie.Models.Product_Type", "_Product_Type")
                        .WithMany()
                        .HasForeignKey("_Product_TypeProduct_TypeId");
                });

            modelBuilder.Entity("FreshLifie.Models.Provider_Order", b =>
                {
                    b.HasOne("FreshLifie.Models.Order", "_Order")
                        .WithMany("prvoderslist")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FreshLifie.Models.Provider", "_provider")
                        .WithMany("orderList")
                        .HasForeignKey("ProviderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FreshLifie.Models.User_Provider", b =>
                {
                    b.HasOne("FreshLifie.Models.Provider", "_providers")
                        .WithMany("UserList")
                        .HasForeignKey("ProviderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FreshLifie.Models.User", "_user")
                        .WithMany("ProvidersList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
